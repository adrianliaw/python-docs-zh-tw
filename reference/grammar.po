# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Wey-Han Liaw <adrianliaw2000@gmail.com>, 2018
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 05:02+0000\n"
"PO-Revision-Date: 2017-02-16 23:38+0000\n"
"Last-Translator: Wey-Han Liaw <adrianliaw2000@gmail.com>, 2018\n"
"Language-Team: Chinese (Taiwan) (https://www.transifex.com/python-doc/"
"teams/5390/zh_TW/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_TW\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../reference/grammar.rst:2
msgid "Full Grammar specification"
msgstr "完整的語法規格書"

#: ../../reference/grammar.rst:4
msgid ""
"This is the full Python grammar, derived directly from the grammar used to "
"generate the CPython parser (see :source:`Grammar/python.gram`). The version "
"here omits details related to code generation and error recovery."
msgstr ""

#: ../../reference/grammar.rst:9
msgid ""
"The notation is a mixture of `EBNF <https://en.wikipedia.org/wiki/"
"Extended_Backus%E2%80%93Naur_form>`_ and `PEG <https://en.wikipedia.org/wiki/"
"Parsing_expression_grammar>`_. In particular, ``&`` followed by a symbol, "
"token or parenthesized group indicates a positive lookahead (i.e., is "
"required to match but not consumed), while ``!`` indicates a negative "
"lookahead (i.e., is required _not_ to match).  We use the ``|`` separator to "
"mean PEG's \"ordered choice\" (written as ``/`` in traditional PEG grammars)."
msgstr ""
