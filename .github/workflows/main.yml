name: Build and update documentation

# Daily at 0 am
on: workflow_dispatch

# Branch where translation takes place
env:
  BRANCH: 3.9

jobs:

  # Job to pull, build and push translations from Transifex to the repository
  sync:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.BRANCH }}
        fetch-depth: 1
    - uses: actions/setup-python@v2
    - run: sudo apt update
    - run: sudo apt install -y gettext
    - run: pip3 install transifex-client powrap
    - run: make update_txconfig
    - name: Write .transifexrc
      run: |
        if [[ -n "$TRANSIFEX_APIKEY" ]]; then
            echo -e "[https://www.transifex.com]\n"          \
                "api_hostname = https://api.transifex.com\n" \
                "hostname = https://www.transifex.com\n"     \
                "password = $TRANSIFEX_APIKEY\n"             \
                "username = api"                             \
                > ~/.transifexrc
        fi
      env:
          TRANSIFEX_APIKEY: ${{ secrets.TRANSIFEX_APIKEY }}
    - name: Run tx push
      run: tx push -t --language zh_TW --parallel
    - name: Run tx pull
      run: tx pull --force --language zh_TW --parallel
    - name: Run make push
      run: |
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
        if [ ! "git status -s | egrep '\.po|\.tx/config'" ]; then
          echo "Nothing to commit";                                           \
          exit 0;                                                             \
        else                                                                    \
          git add *.po **/*.po .tx/config;                                    \
          git commit -m 'Update translations from Transifex';                 \
          if [ $(GITHUB_TOKEN) != "" ]; then                                  \
            header="$(echo -n token:"$(GITHUB_TOKEN)" | base64)";           \
            git -c http.extraheader="AUTHORIZATION: basic $(header)" push;  \
          else                                                                \
            git push;                                                       \
          fi;                                                                 \
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
